name: Deploy VEX API on AWS ECR

on:
  push:
    branches: 
      - prod
      - dev

jobs:
  deploy:
    name: Deploy
    runs-on: ubuntu-latest

    steps:
    - name: Checkout
      uses: actions/checkout@afe4af09a72596f47d806ee5f8b2674ec07fdc73

    - name: Get Branch Name
      id: get-branch
      shell: bash
      run: echo ::set-output name=branch-name::${GITHUB_REF#refs/*/}

    - name: Get Package Version
      id: get-version
      run: |
        versionValue=$(cat package.json | jq '.version')
        appVersion="${versionValue%\"}"
        appVersion="${appVersion#\"}"
        echo "::set-output name=app-version::$appVersion"

    - name: Configure AWS credentials
      uses: aws-actions/configure-aws-credentials@ea7b857d8a33dc2fb4ef5a724500044281b49a5e
      with:
        aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
        aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
        aws-region: ap-northeast-1

    - name: Login to Amazon ECR
      id: login-ecr
      uses: aws-actions/amazon-ecr-login@v1

    - name: Build, tag, and push the image to Amazon ECR
      id: build-image
      env:
        ECR_REGISTRY: ${{ steps.login-ecr.outputs.registry }}
        ECR_REPOSITORY_PROD: ${{ secrets.REPO_NAME_PROD }}
        ECR_REPOSITORY_DEV: ${{ secrets.REPO_NAME_DEV }}
        APP_VERSION: ${{ steps.get-version.outputs.app-version }}
        BRANCH: ${{ steps.get-branch.outputs.branch-name }}
      run: |
        # create a unique build number, version may not change in package.json 
        IMAGE_TAG=$APP_VERSION.$(date +%Y%m%d%H%M%S)

        # set ecr repo name basis current branch
        if [ $BRANCH == prod ]; then
          DOCKER_URL=$ECR_REGISTRY/$ECR_REPOSITORY_PROD:$IMAGE_TAG
        else
          DOCKER_URL=$ECR_REGISTRY/$ECR_REPOSITORY_DEV:$IMAGE_TAG
        fi
        # build a docker container and push it to ECR 
        docker build -t $DOCKER_URL .
        echo "Pushing $BRANCH $IMAGE_TAG image to ECR..."
        docker push $DOCKER_URL
        echo "::set-output name=image::$DOCKER_URL"
        echo "::set-output name=image-tag::$IMAGE_TAG"

    - name: Generate Docker Run File
      env:
        IMAGE_NAME: ${{ steps.build-image.outputs.image }}
        ZIP_FILE: v${{ steps.build-image.outputs.image-tag }}.zip
      run: |
        # replace image_name environment variable in template file
        envsubst < dockerrun.template.json > Dockerrun.aws.json
        # create archive with docker run file
        zip -r $ZIP_FILE Dockerrun.aws.json

    - name: Deploy Docker Run File
      env:
        ZIP_FILE: v${{ steps.build-image.outputs.image-tag }}.zip
        IMAGE_TAG: ${{ steps.build-image.outputs.image-tag }}
        AWS_ACCOUNT_ID: ${{ secrets.AWS_ACCOUNT_ID }}
        BRANCH: ${{ steps.get-branch.outputs.branch-name }}
      run: |
        APP_NAME=development-vex-api-app
        ENV_NAME=development-vex-api-env

        if [ $BRANCH == prod ]; then
          APP_NAME=production-vex-api-app
          ENV_NAME=production-vex-api-env
        fi

        # copy zip file to s3 bucket
        aws s3 cp $ZIP_FILE s3://elasticbeanstalk-ap-northeast-1-${AWS_ACCOUNT_ID}/deployments/$BRANCH/

        aws elasticbeanstalk create-application-version --application-name $APP_NAME \
          --version-label $IMAGE_TAG \
          --source-bundle S3Bucket=elasticbeanstalk-ap-northeast-1-${AWS_ACCOUNT_ID},S3Key=deployments/$BRANCH/$ZIP_FILE
          
        aws elasticbeanstalk update-environment --application-name $APP_NAME \
          --environment-name $ENV_NAME \
          --version-label $IMAGE_TAG
