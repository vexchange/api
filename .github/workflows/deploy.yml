name: Deploy VEX API on AWS ECR

on:
  push:
    branches: 
      - prod
      - dev

jobs:
  deploy:
    name: Deploy
    runs-on: ubuntu-latest

    steps:
    - name: Checkout
      uses: actions/checkout@afe4af09a72596f47d806ee5f8b2674ec07fdc73

    - name: Extract branch name
      shell: bash
      run: echo "##[set-output name=branch;]$(echo ${GITHUB_REF#refs/heads/})"
      id: extract_branch

    - name: Configure AWS credentials
      uses: aws-actions/configure-aws-credentials@ea7b857d8a33dc2fb4ef5a724500044281b49a5e
      with:
        aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
        aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
        aws-region: ap-northeast-1

    - name: Login to Amazon ECR
      id: login-ecr
      uses: aws-actions/amazon-ecr-login@v1

    - name: Build, tag, and push the image to Amazon ECR
      id: build-image
      env:
        ECR_REGISTRY: ${{ steps.login-ecr.outputs.registry }}
        ECR_REPOSITORY_PROD: ${{ secrets.REPO_NAME_PROD }}
        ECR_REPOSITORY_DEV: ${{ secrets.REPO_NAME_DEV }}
        IMAGE_TAG: latest
        BRANCH: ${{ steps.extract_branch.outputs.branch }}
      run: |
        # set ecr repo name basis current branch
        if [ $BRANCH == prod ]; then
          DOCKER_URL=$ECR_REGISTRY/$ECR_REPOSITORY_PROD:$IMAGE_TAG
        else
          DOCKER_URL=$ECR_REGISTRY/$ECR_REPOSITORY_DEV:$IMAGE_TAG
        fi
        # build a docker container and push it to ECR 
        docker build -t $DOCKER_URL .
        echo "Pushing image to ECR..."
        docker push $DOCKER_URL
        echo "::set-output name=image::$DOCKER_URL"
